
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.snowball.SnowballAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.TextField;
import org.apache.lucene.index.DirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.queryparser.classic.QueryParser;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopDocs;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.RAMDirectory;
import org.apache.lucene.util.Version;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author first
 */
public class searchEngine extends javax.swing.JFrame {

    /**
     * Creates new form searchEngine
     */
    public searchEngine() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setText("Enter your search key :");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 40, 232, 38);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(70, 110, 148, 28);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(90, 180, 106, 33);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/i10.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 560, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            Analyzer analyzer = new SnowballAnalyzer(Version.LUCENE_4_10_3,"Porter");
            Directory dir = new RAMDirectory();
            IndexWriterConfig config = new IndexWriterConfig(Version.LUCENE_4_10_3, analyzer);
            IndexWriter index = new IndexWriter(dir, config);               /// throws IOException
            
            File path = new File("E:\\FCI\\IR task\\me.txt");
            Scanner scan = new Scanner(path);
            String title = "";
            while(scan.hasNextLine()){
                title = title.concat(scan.nextLine()+"\n");
            }
    
            File path1 = new File("E:\\FCI\\IR task\\me2.pdf");
            Scanner scan1 = new Scanner(path1);
            String title1 = "";
            while(scan.hasNextLine()){
                title1 = title1.concat(scan1.nextLine()+"\n");
            }
    
            File path2 = new File("E:\\FCI\\IR task\\me3.docx");
            Scanner scan2 = new Scanner(path2);
            String title2 = "";
            while(scan.hasNextLine()){
                title2 = title2.concat(scan2.nextLine()+"\n");
            }
    
            addDoc(index, path , title );
            addDoc(index, path1 , title1 );
            addDoc(index, path2 , title2 );
            index.close();
            
            
            String querystr = jTextField1.getText();
            
            QueryParser parser =new QueryParser(Version.LUCENE_40, "title",analyzer);
            Query query = parser.parse(querystr);
            
            IndexReader reader = DirectoryReader.open(dir);
            IndexSearcher searcher = new IndexSearcher(reader);
            
            
            TopDocs hits = searcher.search(query, 10);
            ScoreDoc[] scoreDocs = hits.scoreDocs;
            
            JOptionPane.showMessageDialog(null, "Found " + scoreDocs.length + " hits.");
            
            
            for(int i=0;i<scoreDocs.length;++i) {
                int docId = scoreDocs[i].doc;
                Document d = searcher.doc(docId);
                JOptionPane.showMessageDialog(null,(i + 1) + ". " + d.get("title")+ "  >>>>  " + scoreDocs[i].score);
            }
            
            
            reader.close();
        } catch (IOException ex) {
            Logger.getLogger(searchEngine.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(searchEngine.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, ParseException {
        /* Set the Nimbus look and feel */
        
       
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchEngine().setVisible(true);
            }
        });
    }

    private static void addDoc(IndexWriter index, File path , String title) throws IOException {
    Document doc = new Document();           
    
    doc.add(new TextField("path", "" , Field.Store.YES));
    doc.add(new TextField("title", title, Field.Store.YES));
    
    index.addDocument(doc);           
  }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
